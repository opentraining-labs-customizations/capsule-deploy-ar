- name: Install required packages
  ansible.builtin.dnf:
    state: present
    name:
      - ansible-core
      - podman
      - wget

- name: Gather IP address from facts
  ansible.builtin.set_fact:
    host_ip: "{{ ansible_default_ipv4.address }}"

- name: Add entry to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ host_ip }} {{ pert_capsule_external_fqdn }}"
    state: present
    create: yes
      
- name: Create letsencrypt subdirectories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - /etc/letsencrypt
    - /var/lib/letsencrypt

- name: Try to issue SSL certificate
  block:
    - name: Issue SSL cert
      shell: >
        podman run -it --rm --name certbot \
            -v "/etc/letsencrypt:/etc/letsencrypt:Z" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt:Z" \
            -p 80:80 \
            -p 443:443 \
            docker.io/certbot/certbot:latest certonly \
            --key-type rsa \
            --rsa-key-size 4096 \
            --no-bootstrap \
            --standalone \
            -d "{{ pert_capsule_external_fqdn }}" \
            --email ansible-network@redhat.com \
            --noninteractive \
            --agree-tos
      register: _r_issue_sat_cert
      until: _r_issue_sat_cert is not failed
      retries: 5
  rescue:
    - name: Error with SSL cert
      debug:
        msg: "Unable to retrieve SSL cert, ERROR, continuing on without cert..."

- name: Download LetsEncrypt CA certs
  get_url:
    url: "{{ item.url }}"
    dest: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}"
    mode: 0644
    checksum: "{{ item.checksum }}"
    group: root
    owner: root
  loop:
    - url: https://letsencrypt.org/certs/2024/r10.pem
      checksum: sha256:29ee679fb573c905bf3538126de6893a9e20ebe1cf400c6df22e5d171c94f543
    - url: https://letsencrypt.org/certs/2024/r11.pem
      checksum: sha256:6c06a45850f93aa6e31f9388f956379d8b4fb7ffca5211b9bab4ad159bdfb7b9
    - url: https://letsencrypt.org/certs/isrgrootx1.pem
      checksum: sha256:22b557a27055b33606b6559f37703928d3e4ad79f110b407d04986e1843543d1

- name: Retrieve LetsEncrypt R10 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/r10.pem"
  register: intermediate_cert_r10

- name: Retrieve LetsEncrypt R11 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/r11.pem"
  register: intermediate_cert_r11

- name: Retrieve LetsEncrypt root X1 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/isrgrootx1.pem"
  register: root_cert

- name: Combine R10, R11 and root X1 certs to create Letsencrypt CA bundle
  copy:
    content: |
      {{ root_cert.content|b64decode }}
      {{ intermediate_cert_r10.content | b64decode }}
      {{ intermediate_cert_r11.content | b64decode }}
    dest: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/letsencrypt-ca-bundle.pem"

- name: Set hostname for capsule
  ansible.builtin.hostname:
    name: "{{ pert_capsule_external_fqdn}}"

- name: Gather IP address from facts
  ansible.builtin.set_fact:
    host_ip: "{{ ansible_default_ipv4.address }}"

- name: Add entry to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ host_ip }} {{ pert_capsule_external_fqdn }}"
    state: present
    create: yes

- name: Unregister the system
  community.general.redhat_subscription:
    state: absent

- name: Remove katello-ca-consumer-demosat package
  ansible.builtin.dnf:
    state: absent
    name: katello-ca-consumer-demosat*

- name: Install katello-ca-consumer-demosat package
  ansible.builtin.dnf:
    state: present
    disable_gpg_check: true
    name: http://{{ pert_satellite_external_fqdn }}/pub/katello-ca-consumer-latest.noarch.rpm

- name: [1]Sleep for 150 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 150
  delegate_to: localhost

- name: Register the system
  ignore_errors: true
  community.general.redhat_subscription:
    state: present
    username: "{{ pert_satellite_user_name }}"
    password: "{{ pert_satellite_user_password }}"
    auto_attach: true

- name: [2]Sleep for 150 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 150
  delegate_to: localhost

- name: Register the system
  ignore_errors: true
  community.general.redhat_subscription:
    state: present
    username: "{{ pert_satellite_user_name }}"
    password: "{{ pert_satellite_user_password }}"
    auto_attach: true

- name: Enable manage_repos in rhsm.conf
  ansible.builtin.lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: "^manage_repos ="
    line: "manage_repos = 1"

- name: Disable auto-registration in rhsm.conf
  ansible.builtin.lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: "^auto_registration ="
    line: "auto_registration = 0"

- name: Disable all RHSM repositories
  community.general.rhsm_repository:
    name: '*'
    state: disabled

- name: Enable required RHSM repositories
  community.general.rhsm_repository:
    name:
      - rhel-8-for-x86_64-baseos-rpms
      - rhel-8-for-x86_64-appstream-rpms
      - satellite-capsule-6.15-for-rhel-8-x86_64-rpms
      - satellite-maintenance-6.15-for-rhel-8-x86_64-rpms
    state: enabled
    
- name: Enable satellite-capsule module and update the system
  shell: dnf -y module enable satellite-capsule:el8; dnf -y update

- name: Install satellite-capsule package
  ansible.builtin.dnf:
    state: present
    name: satellite-capsule

- name: Install required packages
  ansible.builtin.dnf:
    state: present
    name:
      - ansible-core
      - podman
      - wget

- name: Gather IP address from facts
  ansible.builtin.set_fact:
    host_ip: "{{ ansible_default_ipv4.address }}"

- name: Add entry to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ host_ip }} {{ pert_capsule_external_fqdn }}"
    state: present
    create: yes
      
- name: Create letsencrypt subdirectories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  with_items:
    - /etc/letsencrypt
    - /var/lib/letsencrypt

- name: Try to issue SSL certificate
  block:
    - name: Issue SSL cert
      shell: >
        podman run -it --rm --name certbot \
            -v "/etc/letsencrypt:/etc/letsencrypt:Z" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt:Z" \
            -p 80:80 \
            -p 443:443 \
            docker.io/certbot/certbot:latest certonly \
            --key-type rsa \
            --rsa-key-size 4096 \
            --no-bootstrap \
            --standalone \
            -d "{{ pert_capsule_external_fqdn }}" \
            --email ansible-network@redhat.com \
            --noninteractive \
            --agree-tos
      register: _r_issue_sat_cert
      until: _r_issue_sat_cert is not failed
      retries: 5
  rescue:
    - name: Error with SSL cert
      debug:
        msg: "Unable to retrieve SSL cert, ERROR, continuing on without cert..."

- name: Download LetsEncrypt CA certs
  get_url:
    url: "{{ item.url }}"
    dest: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}"
    mode: 0644
    checksum: "{{ item.checksum }}"
    group: root
    owner: root
  loop:
    - url: https://letsencrypt.org/certs/2024/r10.pem
      checksum: sha256:29ee679fb573c905bf3538126de6893a9e20ebe1cf400c6df22e5d171c94f543
    - url: https://letsencrypt.org/certs/2024/r11.pem
      checksum: sha256:6c06a45850f93aa6e31f9388f956379d8b4fb7ffca5211b9bab4ad159bdfb7b9
    - url: https://letsencrypt.org/certs/isrgrootx1.pem
      checksum: sha256:22b557a27055b33606b6559f37703928d3e4ad79f110b407d04986e1843543d1

- name: Retrieve LetsEncrypt R10 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/r10.pem"
  register: intermediate_cert_r10

- name: Retrieve LetsEncrypt R11 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/r11.pem"
  register: intermediate_cert_r11

- name: Retrieve LetsEncrypt root X1 cert
  slurp:
    src: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/isrgrootx1.pem"
  register: root_cert

- name: Combine R10, R11 and root X1 certs to create Letsencrypt CA bundle
  copy:
    content: |
      {{ root_cert.content|b64decode }}
      {{ intermediate_cert_r10.content | b64decode }}
      {{ intermediate_cert_r11.content | b64decode }}
    dest: "/etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/letsencrypt-ca-bundle.pem"

- name: Set hostname for capsule
  ansible.builtin.hostname:
    name: "{{ pert_capsule_external_fqdn}}"

- name: Gather IP address from facts
  ansible.builtin.set_fact:
    host_ip: "{{ ansible_default_ipv4.address }}"

- name: Add entry to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ host_ip }} {{ pert_capsule_external_fqdn }}"
    state: present
    create: yes

- name: Unregister the system
  community.general.redhat_subscription:
    state: absent

- name: Remove katello-ca-consumer-demosat package
  ansible.builtin.dnf:
    state: absent
    name: katello-ca-consumer-demosat*

- name: Install katello-ca-consumer-demosat package
  ansible.builtin.dnf:
    state: present
    disable_gpg_check: true
    name: http://{{ pert_satellite_external_fqdn }}/pub/katello-ca-consumer-latest.noarch.rpm

- name: Register the system
  shell: subscription-manager register --username "{{ pert_satellite_user_name }}" --password "{{ pert_satellite_user_password }}"

- name: Enable manage_repos in rhsm.conf
  ansible.builtin.lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: "^manage_repos ="
    line: "manage_repos = 1"

- name: Disable auto-registration in rhsm.conf
  ansible.builtin.lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: "^auto_registration ="
    line: "auto_registration = 0"

- name: Disable all RHSM repositories
  community.general.rhsm_repository:
    name: '*'
    state: disabled

- name: Enable required RHSM repositories
  community.general.rhsm_repository:
    name:
      - rhel-8-for-x86_64-baseos-rpms
      - rhel-8-for-x86_64-appstream-rpms
      - satellite-capsule-6.15-for-rhel-8-x86_64-rpms
      - satellite-maintenance-6.15-for-rhel-8-x86_64-rpms
    state: enabled
    
- name: Enable satellite-capsule module and update the system
  shell: dnf -y module enable satellite-capsule:el8; dnf -y update

- name: Install satellite-capsule package
  ansible.builtin.dnf:
    state: present
    name: satellite-capsule

- name: Create a directory to store capsule certificates
  delegate_to: "satellite.{{ guid }}.internal"
  ansible.builtin.file:
    path: /root/capsule-certs
    state: directory
    mode: '0755'

- name: Fetch cert.pem file from the capsule VM
  ansible.builtin.slurp:
    src: /etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/cert.pem
  register: capsule_cert_file
 
- name: Copy cert.pem file from capsule to satellite
  delegate_to: "satellite.{{ guid }}.internal"
  copy:
    content: |
      {{ capsule_cert_file.content|b64decode }}
    dest: /root/capsule-certs/cert.pem

- name: Fetch privkey.pem file from the capsule VM
  ansible.builtin.slurp:
    src: /etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/privkey.pem
  register: capsule_cert_file
  
- name: Copy privkey.pem file from capsule to satellite
  delegate_to: "satellite.{{ guid }}.internal"
  copy:
    content: |
      {{ capsule_cert_file.content|b64decode }}
    dest: /root/capsule-certs/privkey.pem

- name: Fetch letsencrypt-ca-bundle.pem file from the capsule VM
  ansible.builtin.slurp:
    src: /etc/letsencrypt/live/{{ pert_capsule_external_fqdn }}/letsencrypt-ca-bundle.pem
  register: capsule_cert_file
  
- name: Copy letsencrypt-ca-bundle.pem file from capsule to satellite
  delegate_to: "satellite.{{ guid }}.internal"
  copy:
    content: |
      {{ capsule_cert_file.content|b64decode }}
    dest: /root/capsule-certs/letsencrypt-ca-bundle.pem

- name: Generate capsule certificates on satellite server
  delegate_to: "satellite.{{ guid }}.internal"
  shell: >
    capsule-certs-generate \
    --foreman-proxy-fqdn {{ pert_capsule_external_fqdn }} \
    --certs-tar /root/capsule_certs.tar \
    --server-cert /root/capsule-certs/cert.pem \
    --server-key /root/capsule-certs/privkey.pem \
    --server-ca-cert /root/capsule-certs/letsencrypt-ca-bundle.pem > /root/output.txt

- name: Fetch cartificate files from the satellite  VM to control node
  delegate_to: "satellite.{{ guid }}.internal"
  ansible.builtin.fetch:
    src: /root/capsule_certs.tar
    dest: "{{ output_dir }}/"
    flat: yes

- name: Copy cartificate files from the control node to the capsule VM
  ansible.builtin.copy:
    src: "{{ output_dir }}/capsule_certs.tar"
    dest: /root/

- name: Grab satellite-installer command for capsule deployment
  delegate_to: "satellite.{{ guid }}.internal"
  shell: sed -n "/"\ \ satellite-installer"/,\$p" /root/output.txt > /root/satellite-install-capsule-cmd.txt

- name: Fetch the generated satellite-installer command for capsule deployment
  delegate_to: "satellite.{{ guid }}.internal"
  ansible.builtin.slurp:
    src: /root/satellite-install-capsule-cmd.txt
  register: satellite_install_capsule_cmd

- name: Copy satellite-install-capsule-cmd command file from satellite to capsule
  copy:
    content: |
      {{ satellite_install_capsule_cmd.content|b64decode }}
    dest: /root/satellite-install-capsule-cmd.sh
    mode: 755

- name: Tweak the capsule deployment command in satellite-install-capsule-cmd.sh
  ansible.builtin.shell: |
    sed -i '/certs-tar-file/c\\--certs-tar-file  "/root/capsule_certs.tar"\\\\' /root/satellite-install-capsule-cmd.sh

- name: Deploy capsule using satellite-install-capsule-cmd.sh
  become: true
  shell: /root/satellite-install-capsule-cmd.sh > /root/satellite-install-capsule-cmd.out
